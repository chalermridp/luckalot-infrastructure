AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description:  luckalot infrastructure

Parameters:
  AppName:
    Type: String
    Default: luckalot
  StageName:
    Type: String
    Default: dev
    AllowedValues: [dev, ppe, prod]
    ConstraintDescription: must specify dev, ppe or prod

  MainVpcCIDR:
    Type: String
    Default: 10.100.0.0/16

  MainPublicSubnet1CIDR:
    Type: String
    Default: 10.100.10.0/24

  MainPublicSubnet2CIDR:
    Type: String
    Default: 10.100.11.0/24

  MainPrivateAppSubnet1CIDR:
    Type: String
    Default: 10.100.20.0/24

  MainPrivateAppSubnet2CIDR:
    Type: String
    Default: 10.100.21.0/24

  MainPrivateDbSubnet1CIDR:
    Type: String
    Default: 10.100.30.0/24

  MainPrivateDbSubnet2CIDR:
    Type: String
    Default: 10.100.31.0/24

  MngmtVpcCIDR:
    Type: String
    Default: 10.101.0.0/16

  MngmtPublicSubnet1CIDR:
    Type: String
    Default: 10.101.10.0/24

  MngmtPublicSubnet2CIDR:
    Type: String
    Default: 10.101.11.0/24

  MngmtPrivateSubnet1CIDR:
    Type: String
    Default: 10.101.20.0/24

  MngmtPrivateSubnet2CIDR:
    Type: String
    Default: 10.101.21.0/24

Resources:
  MainVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref MainVpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: main-vpc

  MainInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: main-internet-gateway

  MainInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MainInternetGateway
      VpcId: !Ref MainVpc

  MainPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVpc
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref MainPublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: main-public-subnet-1a

  MainPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref MainPublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: main-public-subnet-1b

  MainPrivateAppSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref MainPrivateAppSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: main-private-subnet-app-1a

  MainPrivateAppSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref MainPrivateAppSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: main-private-subnet-app-1b

  MainPrivateDbSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref MainPrivateDbSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: main-private-subnet-db-1a

  MainPrivateDbSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MainVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref MainPrivateDbSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: main-private-subnet-db-1b

  MainPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVpc
      Tags:
        - Key: Name
          Value: main-public-route-table

  MainDefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: MainInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref MainPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MainInternetGateway

  MainPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainPublicRouteTable
      SubnetId: !Ref MainPublicSubnet1

  MainPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainPublicRouteTable
      SubnetId: !Ref MainPublicSubnet2

  MainPrivateAppRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVpc
      Tags:
        - Key: Name
          Value: main-private-app-route-table-1a

  MainPrivateAppSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainPrivateAppRouteTable1
      SubnetId: !Ref MainPrivateAppSubnet1

  MainPrivateAppRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVpc
      Tags:
        - Key: Name
          Value: main-private-app-route-table-1b

  MainPrivateAppSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainPrivateAppRouteTable2
      SubnetId: !Ref MainPrivateAppSubnet2

  MainPrivateDbRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVpc
      Tags:
        - Key: Name
          Value: main-private-db-route-table-1a

  MainPrivateDbSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainPrivateDbRouteTable1
      SubnetId: !Ref MainPrivateDbSubnet1

  MainPrivateDbRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVpc
      Tags:
        - Key: Name
          Value: main-private-db-route-table-1b

  MainPrivateDbSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MainPrivateDbRouteTable2
      SubnetId: !Ref MainPrivateDbSubnet2

  MngmtVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref MngmtVpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: mngmt-vpc

  MngmtInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: mngmt-internet-gateway

  MngmtInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MngmtInternetGateway
      VpcId: !Ref MngmtVpc

  MngmtPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MngmtVpc
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref MngmtPublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: mngmt-public-subnet-1a

  MngmtPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MngmtVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref MngmtPublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: mngmt-public-subnet-1b

  MngmtPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MngmtVpc
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref MngmtPrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: mngmt-private-subnet-1a

  MngmtPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MngmtVpc
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref MngmtPrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: mngmt-private-subnet-1b

  MngmtPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MngmtVpc
      Tags:
        - Key: Name
          Value: mngmt-public-route-table

  MngmtDefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: MngmtInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref MngmtPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MngmtInternetGateway

  MngmtPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MngmtPublicRouteTable
      SubnetId: !Ref MngmtPublicSubnet1

  MngmtPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MngmtPublicRouteTable
      SubnetId: !Ref MngmtPublicSubnet2

  MngmtPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MngmtVpc
      Tags:
        - Key: Name
          Value: mngmt-private-route-table-1a

  MngmtPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MngmtPrivateRouteTable1
      SubnetId: !Ref MngmtPrivateSubnet1

  MngmtPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MngmtVpc
      Tags:
        - Key: Name
          Value: mngmt-private-route-table-1b

  MngmtPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MngmtPrivateRouteTable2
      SubnetId: !Ref MngmtPrivateSubnet2
  
  MainAndMngmtVpcPeering:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref MainVpc
      PeerVpcId: !Ref MngmtVpc
      Tags:
        - Key: Name
          Value: main-and-mngmt-vpc-peering

  MainPrivateAppRouteTable1ToMngmtPrivateSubnet1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MngmtPrivateSubnet1CIDR
      RouteTableId: !Ref MainPrivateAppRouteTable1
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MainPrivateAppRouteTable2ToMngmtPrivateSubnet1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MngmtPrivateSubnet1CIDR
      RouteTableId: !Ref MainPrivateAppRouteTable2
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MainPrivateAppRouteTable1ToMngmtPrivateSubnet2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MngmtPrivateSubnet2CIDR
      RouteTableId: !Ref MainPrivateAppRouteTable1
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MainPrivateAppRouteTable2ToMngmtPrivateSubnet2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MngmtPrivateSubnet2CIDR
      RouteTableId: !Ref MainPrivateAppRouteTable2
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MainPrivateDbRouteTable1ToMngmtPrivateSubnet1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MngmtPrivateSubnet1CIDR
      RouteTableId: !Ref MainPrivateDbRouteTable1
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MainPrivateDbRouteTable2ToMngmtPrivateSubnet1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MngmtPrivateSubnet1CIDR
      RouteTableId: !Ref MainPrivateDbRouteTable2
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MainPrivateDbRouteTable1ToMngmtPrivateSubnet2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MngmtPrivateSubnet2CIDR
      RouteTableId: !Ref MainPrivateDbRouteTable1
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MainPrivateDbRouteTable2ToMngmtPrivateSubnet2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MngmtPrivateSubnet2CIDR
      RouteTableId: !Ref MainPrivateDbRouteTable2
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MngmtPrivateRouteTable1ToMainPrivateAppSubnet1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MainPrivateAppSubnet1CIDR
      RouteTableId: !Ref MngmtPrivateRouteTable1
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MngmtPrivateRouteTable1ToMainPrivateAppSubnet2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MainPrivateAppSubnet2CIDR
      RouteTableId: !Ref MngmtPrivateRouteTable1
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MngmtPrivateRouteTable2ToMainPrivateAppSubnet1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MainPrivateAppSubnet1CIDR
      RouteTableId: !Ref MngmtPrivateRouteTable2
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MngmtPrivateRouteTable2ToMainPrivateAppSubnet2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MainPrivateAppSubnet2CIDR
      RouteTableId: !Ref MngmtPrivateRouteTable2
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MngmtPrivateRouteTable1ToMainPrivateDbSubnet1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MainPrivateDbSubnet1CIDR
      RouteTableId: !Ref MngmtPrivateRouteTable1
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MngmtPrivateRouteTable1ToMainPrivateDbSubnet2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MainPrivateDbSubnet2CIDR
      RouteTableId: !Ref MngmtPrivateRouteTable1
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MngmtPrivateRouteTable2ToMainPrivateDbSubnet1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MainPrivateDbSubnet1CIDR
      RouteTableId: !Ref MngmtPrivateRouteTable2
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering

  MngmtPrivateRouteTable2ToMainPrivateDbSubnet2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref MainPrivateDbSubnet2CIDR
      RouteTableId: !Ref MngmtPrivateRouteTable2
      VpcPeeringConnectionId: !Ref MainAndMngmtVpcPeering
      
Outputs:
  MainVpc:
    Description: A reference to the created main vpc
    Value: !Ref MainVpc

  MainPublicSubnets:
    Description: A list of the main public subnets
    Value: !Join [ ",", [ !Ref MainPublicSubnet1, !Ref MainPublicSubnet2 ]]

  MainPrivateSubnets:
    Description: A list of the main private subnets
    Value: !Join [ ",", [ !Ref MainPrivateAppSubnet1, !Ref MainPrivateAppSubnet2 ]]

  MainPrivateDbSubnets:
    Description: A list of the main private db subnets
    Value: !Join [ ",", [ !Ref MainPrivateDbSubnet1, !Ref MainPrivateDbSubnet2 ]]

  MainPublicSubnet1:
    Description: A reference to the main public subnet in the 1st Availability Zone
    Value: !Ref MainPublicSubnet1

  MainPublicSubnet2:
    Description: A reference to the main public subnet in the 2nd Availability Zone
    Value: !Ref MainPublicSubnet2

  MainPrivateAppSubnet1:
    Description: A reference to the main private subnet in the 1st Availability Zone
    Value: !Ref MainPrivateAppSubnet1

  MainPrivateAppSubnet2:
    Description: A reference to the main private subnet in the 2nd Availability Zone
    Value: !Ref MainPrivateAppSubnet2

  MainPrivateDbSubnet1:
    Description: A reference to the main private db subnet in the 1st Availability Zone
    Value: !Ref MainPrivateDbSubnet1

  MainPrivateDbSubnet2:
    Description: A reference to the main private db subnet in the 2nd Availability Zone
    Value: !Ref MainPrivateDbSubnet2

  MngmtVpc:
    Description: A reference to the created mngmt vpc
    Value: !Ref MngmtVpc

  MngmtPublicSubnets:
    Description: A list of the mngmt public subnets
    Value: !Join [ ",", [ !Ref MngmtPublicSubnet1, !Ref MngmtPublicSubnet2 ]]

  MngmtPrivateSubnets:
    Description: A list of the mngmt private subnets
    Value: !Join [ ",", [ !Ref MngmtPrivateSubnet1, !Ref MngmtPrivateSubnet2 ]]

  MngmtPublicSubnet1:
    Description: A reference to the mngmt public subnet in the 1st Availability Zone
    Value: !Ref MngmtPublicSubnet1

  MngmtPublicSubnet2:
    Description: A reference to the mngmt public subnet in the 2nd Availability Zone
    Value: !Ref MngmtPublicSubnet2

  MngmtPrivateSubnet1:
    Description: A reference to the mngmt private subnet in the 1st Availability Zone
    Value: !Ref MngmtPrivateSubnet1

  MngmtPrivateSubnet2:
    Description: A reference to the mngmt private subnet in the 2nd Availability Zone
    Value: !Ref MngmtPrivateSubnet2
